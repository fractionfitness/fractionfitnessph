name: Pull Request Opened on Dev Branch w/ DB changes

on:
  pull_request:
    # branches: [feat/no-ref/cicd-setup, test-pr]
    branches: [staging]
    types: [opened]
    paths: ['prisma/schema.prisma']
  push:
    branches: [cicd-test]

# env:
#   VERCEL_ENV: preview
#   VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#   VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build:
    # environment: preview # Github Environment
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    runs-on: ubuntu-latest
    steps:
      - name: Check Env Values
        run: |
          echo "$VERCEL_ORG_ID"
          echo "$VERCEL_PROJECT_ID"
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      # - name: Check Values after vercel env pull
      #   run: |
      #     echo "${DATABASE_URL}"
      #     echo "${NEXTAUTH_URL}"
      #     echo "${NEXTAUTH_SECRET}"
      #     echo $VERCEL_URL
      #     echo "${VERCEL_URL}"
      #     echo "${VERCEL_ENV}"
      #     echo "https://{VERCEL_URL}"
      #     echo "https://${VERCEL_URL}"
      # Better to build in Vercel so that it has access to System Environment Variables and no need to define NEXTAUTH_URL
      # reference: https://next-auth.js.org/configuration/options
      # - name: Build Project Artifacts
      #   run: npm run postinstall && vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project to Vercel
        run: |
          vercel deploy --token=${{ secrets.VERCEL_TOKEN }} >deployment-url.txt 2>error.txt
          bash ./vercel-check-deploy.sh
        # vercel deploy --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
        # echo "env.VERCEL_ENV ${{ env.VERCEL_ENV }}"
        # NEXTAUTH will produce error after deployment if using "vercel deploy --prebuilt", since VERCEL_URL (deployment url) not yet known during build step (previous step)
        # can only get VERCEL_URL after deploy
        # run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
      # - name: Extract branch name
      #   id: extract_branch
      #   # shell: bash
      #   run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      #   # https://stackoverflow.com/questions/58033366/how-to-get-the-current-branch-within-github-actions
      # - name: Add Env Var to Preview Deployment on branch w/ opened PR
      #   run: |
      #     echo ${{ steps.extract_branch.outputs.branch }}
      #     vercel env add NEXTAUTH_URL preview ${{ steps.extract_branch.outputs.branch }} < deployment-url.txt --token=${{ secrets.VERCEL_TOKEN }}
      # remove env variable if already exists for branch
      # vercel env rm --yes NEXTAUTH_URL ${{ env.VERCEL_ENV }} ${{ steps.extract_branch.outputs.branch }} --token=${{ secrets.VERCEL_TOKEN }}
      # run: vercel env add [env-name] [environment=preview] [gitbranch=gh-actions-vars] < file
      # ref: https://vercel.com/docs/cli/env
      # need a bash script to check if NEXTAUTH_URL already defined for preview pr branch, then remove it if present otherwise proceed directly to adding it

# pscale create  branch: pr-refnum | on db: ffph_dev | uname: fractionfitness2021-bak
# pscale deploy request
# pscale get connection string and use in vercel deployment of feat-refnum-*

